// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Dell Inc, or its subsidiaries.

syntax = "proto3";
package opi_api.storage.v1;
option go_package = "github.com/opiproject/opi-api/storage/v1/gen/go";
import "common.proto";
import "object_key.proto";

// Front End (host-facing) APIs.

// Virtio-blk emulation

service FrontendVirtioBlk {
    rpc VirtioBlkCreate (VirtioBlkCreateRequest) returns (VirtioBlkCreateResponse) {}
    rpc VirtioBlkDelete (VirtioBlkDeleteRequest) returns (VirtioBlkDeleteResponse) {}
    rpc VirtioBlkUpdate (VirtioBlkUpdateRequest) returns (VirtioBlkUpdateResponse) {}
    rpc VirtioBlkList   (VirtioBlkListRequest)   returns (VirtioBlkListResponse)   {}
    rpc VirtioBlkGet    (VirtioBlkGetRequest)    returns (VirtioBlkGetResponse)    {}
    rpc VirtioBlkStats  (VirtioBlkStatsRequest)  returns (VirtioBlkStatsResponse)  {}
}

message VirtioBlkController {
    common.v1.ObjectKey id = 1;

    // The PCI endpoint where this device should appear
    PciEndpoint pcie_id = 2;

    // The back/middle-end volume to back this controller.
    common.v1.ObjectKey volume_id = 3;

    int64 max_io_qps = 4;

    string serial_number = 5;
}

message VirtioBlkCreateRequest {
    VirtioBlkController controller = 1;
}

message VirtioBlkCreateResponse {
    // Intentionally empty.
}

message VirtioBlkDeleteRequest {
    common.v1.ObjectKey id = 1;
}

message VirtioBlkDeleteResponse {
    // Intentionally empty.
}

message VirtioBlkUpdateRequest {
    VirtioBlkController controller = 1;
}

message VirtioBlkUpdateResponse {
    // Intentionally empty.
}

message VirtioBlkListRequest {
    // Intentionally empty.
}

message VirtioBlkListResponse {
    repeated VirtioBlkController controller = 1;
}

message VirtioBlkGetRequest {
    common.v1.ObjectKey id = 1;
}

message VirtioBlkGetResponse {
    VirtioBlkController controller = 1;
}

message VirtioBlkStatsRequest {
    common.v1.ObjectKey id = 1;
}

message VirtioBlkStatsResponse {
    common.v1.ObjectKey id = 1;
    string stats = 2;
}
